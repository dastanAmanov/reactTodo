{"version":3,"sources":["Components/Todo/Todo.jsx","Components/locolisition/content.jsx","App.js","index.js"],"names":["Todo","todo","deleteElem","id","checkedElem","isCompleted","className","defaultChecked","type","onChange","onClick","content","uz","description","ru","eng","App","useState","lang","setLang","JSON","parse","window","localStorage","getItem","setTodo","e","target","dataset","filteredElem","filter","t","Number","setItem","stringify","evt","findElem","find","value","Content","placeholder","onKeyPress","code","newTodo","Date","getTime","trim","map","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oLAceA,MAXf,YAAiE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,WAAYC,EAA+B,EAA/BA,GAAIC,EAA2B,EAA3BA,YAAaC,EAAc,EAAdA,YAC9C,OACI,mCACI,qBAAIC,UAAU,aAAd,UACI,uBAAOA,UAAU,QAAQC,eAAgBF,EAAaG,KAAK,WAAW,UAASL,EAAIM,SAAUL,IAC7F,sBAAME,UAAU,eAAhB,SAAgCL,IAAY,wBAAQK,UAAU,cAAc,UAASH,EAAIO,QAASR,EAAtD,wBCG7CS,EAXD,CACVC,GAAG,CACCC,YAAa,6JAEjBC,GAAG,CACCD,YAAa,glBAEjBE,IAAI,CACAF,YAAa,+GCHN,SAASG,IAEtB,MAAwBC,mBAAS,MAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAEA,EAAsBF,mBAASG,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,WAAa,IAAnF,mBAAKvB,EAAL,KAAWwB,EAAX,KAEA,SAASvB,EAAWwB,GAClB,IAAIvB,EAAKuB,EAAEC,OAAOC,QAAQzB,GAEtB0B,EAAe5B,EAAK6B,QAAO,SAAAC,GAAC,OAAIA,EAAE5B,KAAO6B,OAAO7B,MAEpDsB,EAAQI,GACRP,OAAOC,aAAaU,QAAQ,QAASb,KAAKc,UAAUjC,IAItD,SAASG,EAAY+B,GACnB,IAAMhC,EAAKgC,EAAIR,OAAOC,QAAQzB,GAExBiC,EAAWnC,EAAKoC,MAAK,SAAAN,GAAC,OAAGA,EAAE5B,KAAO6B,OAAO7B,MAC/CiC,EAAS/B,aAAe+B,EAAS/B,YASjCiB,OAAOC,aAAaU,QAAQ,QAASb,KAAKc,UAAUjC,IAmBtD,OAFAqB,OAAOC,aAAaU,QAAQ,QAASb,KAAKc,UAAUjC,IAGlD,qCACA,sBAAKK,UAAU,YAAf,UAEE,yBAAQG,SAAU,SAACiB,GAAD,OAChBP,EAAQO,EAAEC,OAAOW,QACjBhC,UAAU,cAFZ,UAGE,wBAAQgC,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,MAAd,oBAEF,mBAAGhC,UAAU,mBAAb,SAAiCiC,EAAQrB,GAAML,iBAEjD,uBAAOP,UAAU,aAAaE,KAAK,OAAOgC,YAAY,aAAaC,WA7BpE,SAAgBN,GACf,GAAgB,UAAbA,EAAIO,KAAiB,CAEtB,IAAIC,EAAU,CACZxC,IAAI,IAAIyC,MAAOC,UACflC,QAASwB,EAAIR,OAAOW,MAAMQ,OAC1BzC,aAAa,GAEfoB,EAAQ,CAACkB,GAAF,mBAAc1C,KAErBqB,OAAOC,aAAaU,QAAQ,QAASb,KAAKc,UAAUjC,IACpDkC,EAAIR,OAAOW,MAAQ,SAoBpBrC,EAAK8C,KAAI,SAAAhB,GAAC,OACX,cAAC,EAAD,CACC9B,KAAM8B,EAAEpB,QACRR,GAAI4B,EAAE5B,GACND,WAAYA,EACZE,YAAaA,EACbC,YAAa0B,EAAE1B,aALL0B,EAAE5B,UCjEjB6C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAClC,EAAD,MAEFmC,SAASC,eAAe,U","file":"static/js/main.503cff91.chunk.js","sourcesContent":["import React from 'react'\r\nimport '../Todo/Todo.css'\r\n\r\nfunction Todo({todo, deleteElem, id, checkedElem, isCompleted}) {\r\n    return (\r\n        <>\r\n            <li className='todo-block'>\r\n                <input className=\"check\" defaultChecked={isCompleted} type=\"checkbox\" data-id={id} onChange={checkedElem} />\r\n                <span className='todo-content'>{todo}</span><button className='todo-delete' data-id={id} onClick={deleteElem}>&times;</button>\r\n            </li>  \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Todo;","let content = {\r\n    uz:{\r\n        description: 'Vazifalar ro\\'yxatini yaratish uchun dastur. Siz topshiriqlarni kiritasiz, tugallangan vazifalarni belgilaysiz va bajarilgandan so\\'ng ularni o\\'chirasiz.. '\r\n    },\r\n    ru:{\r\n        description: \"Программа для создания списков дел. Вы вводите задания, отмечаете выполненные задачи и удаляете их по завершении.\"\r\n    },\r\n    eng:{\r\n        description: \"A program for creating to-do lists. You enter tasks, mark completed tasks, and delete them when completed.\"\r\n    }\r\n}\r\nexport default content;","import {React, useState} from \"react\";\nimport Todo from './Components/Todo/Todo'\nimport './Components/Todo/Todo.css'\nimport Content from './Components/locolisition/content'\n\nexport default function App() {\n  \n  const [lang, setLang] = useState('uz');\n\n  let [todo, setTodo] = useState(JSON.parse(window.localStorage.getItem('todos')) || []);\n\n  function deleteElem(e){\n    let id = e.target.dataset.id;\n\n    let filteredElem = todo.filter(t => t.id !== Number(id));\n\n    setTodo(filteredElem)\n    window.localStorage.setItem('todos', JSON.stringify(todo));\n\n  }\n  \n  function checkedElem(evt){\n    const id = evt.target.dataset.id\n    \n    const findElem = todo.find(t=> t.id === Number(id))\n    findElem.isCompleted = !findElem.isCompleted\n    \n    // todo.map(t=>{\n    //   if(t.id == id){\n    //     t.style.color = 'red'\n    //   }\n    // })\n    \n\n    window.localStorage.setItem('todos', JSON.stringify(todo));\n  }\n\n   function handle(evt){\n    if(evt.code === 'Enter'){\n\n      let newTodo = {\n        id: new Date().getTime(),\n        content: evt.target.value.trim(),\n        isCompleted: false\n      }\n      setTodo([newTodo, ...todo])\n\n      window.localStorage.setItem('todos', JSON.stringify(todo));\n      evt.target.value = null;\n    }\n  }\n  window.localStorage.setItem('todos', JSON.stringify(todo));\n\n  return (\n    <>\n    <div className=\"todo-lang\">\n    \n      <select onChange={(e)=>\n        setLang(e.target.value)\n      } className=\"todo-select\">\n        <option value=\"uz\">Uz</option>\n        <option value=\"ru\">Ru</option>\n        <option value=\"eng\">Eng</option>\n      </select>\n      <p className='todo-description'>{Content[lang].description}</p>\n    </div>\n    <input className='input-text' type=\"text\" placeholder='To Do List' onKeyPress={handle} />\n\n    {todo.map(t =>\n    <Todo key={t.id}\n     todo={t.content} \n     id={t.id}\n     deleteElem={deleteElem} \n     checkedElem={checkedElem}  \n     isCompleted={t.isCompleted}\n     />)}\n    </>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}